#include <stdio.h>
#include <string.h>

#define MAX_ITEMS 100
#define MAX_ORDERS 50

struct MenuItem {
    char name[50];
    float price;
};

struct Order {
    char item_name[50];
    int quantity;
};

struct MenuItem menu[MAX_ITEMS];
int num_items = 0;

struct Order orders[MAX_ORDERS];
int num_orders = 0;

float total_sales = 0.0;

// Function to add a new menu item
void add_menu_item() {
    if (num_items >= MAX_ITEMS) {
        printf("Menu is full.\n");
        return;
    }

    printf("Enter item name: ");
    scanf("%s", menu[num_items].name);

    printf("Enter item price: ");
    scanf("%f", &menu[num_items].price);

    num_items++;

    printf("Menu item added successfully!\n");
}

// Function to display the menu
void display_menu() {
    if (num_items == 0) {
        printf("Menu is empty.\n");
        return;
    }

    printf("--------------------\n");
    printf("Menu:\n");
    printf("--------------------\n");

    for (int i = 0; i < num_items; i++) {
        printf("%d. %s - %.2f\n", i + 1, menu[i].name, menu[i].price);
    }
}

// Function to take a customer order
void take_order() {
    if (num_items == 0) {
        printf("Menu is empty. Please add items first.\n");
        return;
    }

    if (num_orders >= MAX_ORDERS) {
        printf("Order limit reached.\n");
        return;
    }

    display_menu();

    printf("Enter item number: ");
    int item_num;
    scanf("%d", &item_num);

    if (item_num < 1 || item_num > num_items) {
        printf("Invalid item number.\n");
        return;
    }

    printf("Enter quantity: ");
    scanf("%d", &orders[num_orders].quantity);

    strcpy(orders[num_orders].item_name, menu[item_num - 1].name);
    num_orders++;

    printf("Order taken successfully!\n");
}

// Function to generate and display the bill
void generate_bill() {
    if (num_orders == 0) {
        printf("No orders placed.\n");
        return;
    }

    printf("\n--------------------\n");
    printf("Bill:\n");
    printf("--------------------\n");

    float total_bill = 0.0;

    for (int i = 0; i < num_orders; i++) {
        float item_price = 0.0;
        for (int j = 0; j < num_items; j++) {
            if (strcmp(orders[i].item_name, menu[j].name) == 0) {
                item_price = menu[j].price;
                break;
            }
        }
        float item_total = item_price * orders[i].quantity;
        total_bill += item_total;

        printf("%s x %d = %.2f\n", orders[i].item_name, orders[i].quantity, item_total);
    }

    printf("\nTotal Bill: %.2f\n", total_bill);
    total_sales += total_bill;

    printf("--------------------\n");
}

// Function to calculate and display total sales
void display_total_sales() {
    printf("\nTotal Sales: %.2f\n", total_sales);
}

int main() {
    int choice;

    do {
        printf("\nCafe Billing System\n");
        printf("1. Add Menu Item\n");
        printf("2. Display Menu\n");
        printf("3. Take Order\n");
        printf("4. Generate Bill\n");
        printf("5. Display Total Sales\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                add_menu_item();
                break;
            case 2:
                display_menu();
                break;
            case 3:
                take_order();
                break;
            case 4:
                generate_bill();
                break;
            case 5:
                display_total_sales();
                break;
            case 6:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice.\n");
        }
    } while (choice != 6);

    return 0;
}